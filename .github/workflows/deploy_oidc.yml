on:
  workflow_call:
    inputs:
      deploy_env:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: false
      aws_secret_access_key:
        required: false
      oidc_role_arn:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_env }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python, caching dependencies
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
      
      - name: Manually install requirements.txt
        run: pip install -r deploy/requirements.txt
      
      - name: Install node and related deps
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.1

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure awscli (local runner)
        if: ${{ env.ACT }} # OIDC doesn't work when using ACT, as AWS user accounts don't have access to the OIDC role by default
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-west-2" >> $GITHUB_ENV
          echo "AWS_REGION=us-west-2" >> $GITHUB_ENV

      - name: Configure awscli (non-local runner)
        if: ${{ !env.ACT }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
          aws-region: us-west-2

      - name: Get environment configuration from AWS Secrets Manager
        run: |
          aws secretsmanager get-secret-value --secret-id data-pipelines-env-secret-${{ github.event.inputs.DEPLOY_ENV }} --query SecretString --output text --region us-west-2 | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" >> $GITHUB_ENV
      
      - name: deploy
        run: cd deploy && cdk deploy --all --require-approval never
        env:
          ENV: ${{ github.event.inputs.DEPLOY_ENV }} # ensure deployment to correct environment

